package li.剑指offer.动态规划.约瑟夫问题;

/**
 * 让 个小朋友们围成一个大圈。然后,他随机指定一个数 ,让编号为0的小朋友开始报数。
 * 每次喊到 的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,
 * 从他的下一个小朋友开始,继续 ... 报数....这样下去....直到剩下最后一个小朋友,可以不用表演,
 * 并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。请你试着想下,哪个小朋友会得到这份礼品呢？
 *
 *
 *
 * 对于「n,m 问题」，首轮删除环中第 m 个数字后，得到一个长度为 n - 1的数字环。
 * 由于有可能 m > nm>n ，因此删除的数字为(m−1)%n ，删除后的数字环从下个数字（即m%n ）开始，设 t=m%n ，
 * 可得数字环：t, t + 1, t + 2, ..., 0, 1, ..., t - 3, t - 2
 * 递推到：x = (x + t) % n
 * x = (x + m % n) % n;
 * x = (x + m) % n;
 * 即 dp[n] = (dp[n - 1] + m) % n;
 *
 * 解题思路：状态定义：
 * 设「i,m 问题」的解为 dp[i] ；
 * 转移方程： 通过以下公式可从 dp[i - 1] 递推得到 dp[i] ；
 * dp[i] = (dp[i - 1] + m) % i
 * 初始状态：「1,m 问题」的解恒为 0，即 dp[1] = 0；
 * 返回值：返回「n,m 问题」的解dp[n] ；
 */
public class Solution {
    public int LastRemaining_Solution(int n, int m) {
        int x = 0;
        for (int i = 2; i <= n; i++) {
            x = (x + m) / i;
        }
        return x;
    }
}
